---
- name: Provision a kubernetes node
  hosts: "{{ target }}"
  become: yes
  tasks:
      - name: Update apt repository cache
        apt:
            update_cache: yes

      - name: Install dependencies packages
        apt:
            name: "{{ item }}"
            state: present
        with_items:
            - wget
            - curl
            - apt-transport-https
            - gnupg2

      - name: Disable swapp
        command: sed -i '/swap/d' /etc/fstab

      - name: Disable swap
        command: swapoff -a

      - name: Add required kernel modules
        community.general.modprobe:
           name: "{{ item }}"
           state: present
        loop:
           - overlay
           - br_netfilter
    
      - name: Add required sysctl rules
        ansible.posix.sysctl:
           name: "{{ item.key }}"
           value: "{{ item.value }}"
           sysctl_file: /etc/sysctl.d/k8s.conf
           reload: true
        loop: "{{ sysctl | dict2items }}"
        vars:
          sysctl:
            net.bridge.bridge-nf-call-ip6tables: 1
            net.bridge.bridge-nf-call-iptables: 1
            net.ipv4.ip_forward: 1

      - name: Add docker apt repository key
        get_url:
           url: https://download.docker.com/linux/debian/gpg
           dest: /etc/apt/keyrings/docker.asc
           mode: 0644
           owner: root
           group: root

      - name: Add docker apt repository
        apt_repository:
           repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
           state: present

      - name: Install docker packages
        apt:
            name: "{{ item }}"
            state: present
        with_items:
            - docker-ce
            - docker-ce-cli
            - containerd.io

      - name: Add vagrant user to docker group
        user:
            name: vagrant
            group: docker

      - name: Add k8s apt repository key
        apt_key:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
            state: present

      - name: Add k8s apt repository key
        get_url:
            url: https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key
            dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
            mode: 0644
            owner: root
            group: root

      - name: Add k8s apt repository
        apt_repository:
            repo: deb [arch=am64 signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /
            state: present

      - name: Update apt repository cache
        apt:
            update_cache: yes

      - name: Install dependencies packages
        apt:
            name: "{{ item }}"
            state: present
        with_items:
            - kubelet
            - kubeadm
            - kubectl

      - name: Update containerd default configuration
        shell:
            cmd: containerd config default > /etc/containerd/config.toml
    
      - name: Update containerd configuration
        ansible.builtin.lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^(.*)SystemdCgroup'
            line: '            SystemdCgroup = true'        

      - name: Update containerd configuration
        ansible.builtin.lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^(.*)sandbox_image'
            line: '    sandbox_image = "registry.k8s.io/pause:3.9"'   

      - name: Restart containerd service
        service:
            name: containerd
            state: restarted

      - name: Update kubeadm.conf file
        lineinfile:
            path: /lib/systemd/system/kubelet.service.d/10-kubeadm.conf
            regexp: 'Environment="KUBELET_EXTRA_ARGS="'
            line: "Environment=\"KUBELET_EXTRA_ARGS=--node-ip={{ node_ipÂ }}\""

      - name: Reload systemd daemon
        systemd:
            daemon_reload: yes

      - name: Restart kubelet service
        service:
            name: kubelet
            state: restarted

      - name: Copy join command
        copy:
            src: "{{ join_file }}"
            dest: "/tmp/{{ join_file }}"
            mode: 0777

      - name: Join k8s cluster
        command: sh "{{ join_file }}"
        args:
            chdir: /tmp